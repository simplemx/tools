<!doctype html>
<html dir="ltr" lang="zh-CN">
<head>
<title>murdered by the fucking code</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<style type="text/css">
body {font:normal 12px/24px Arial, Helvetica, sans-serif; background:#D9F0DB;}
textarea,pre {font-family:Courier; font-size:12px;}
</style>
</head>
<body>
<p><a href='_index.htm'>&lt;&lt;目录</a></p><p>DRY原则，耳熟能详了吧。</p>
<p> </p>
<p>或许我们都在编码的过程中都严格要求自己遵守这个原则，将重复的代码消灭掉，然后微笑着迎接改变的需求，然后乐滋滋的想，哈，你看，那经理紧张的要死地说工作量好大啊，但其实我只需要改动那里就可以了哦，哈哈，爽啊。</p>
<p> </p>
<p>但是也会有例外。</p>
<p> </p>
<p>时间只会少不会多，人家拿你几倍的工资，却压迫着你在实际开发时间3分1的时间内将这个没文档描述连需求都没人能说的清楚的，还随时可能变动的垃圾功能完成出来。于是，你加班加点，加到吐血。你心里想，额，那段代码虽然和那边的重复了，但是，要么就是要合并在一起实在是代价太大了，要么就是只可能就这两个地方了，你想要是再有重复的话，你就再将他们合并到一起去。so，项目继续推进，你继续加班加点。的确，那些代码就在那里，虽然重复了，但也没有什么大的问题。哪天你发现又重复了，然后就抽点时间埋头抽取出来，然后ok。开心的一笑。</p>
<p> </p>
<p>恩，你逐渐地理解，it's just a guide line。一切都是要根据实际出发，合适即可。当然，不遵循guide line的时候，你心里已经有底了。</p>
<p> </p>
<p> </p>
<p>但事实是有更多严重违背DRY原则的情况。比如，某日，你参加一个web项目，你负责增加功能。功能好简单，web系统嘛，无非就是增删改查，调用下后台接口，改下页面，ok，it's a piece of cake.</p>
<p> </p>
<p>但。你错了。</p>
<p> </p>
<p>首先，tmd哪个sb搭的项目环境，直接将另外一个类似的web项目的代码全部拷过来了，一点都不删掉。我的妈呀，你好歹也干掉这边不用的代码呀。</p>
<p> </p>
<p>然后，你跟项目经理提意见，经理跟你说，这个为了短平快，就这样咯。靠，你看着原来一堆人家写的代码，一个功能有n套界面，你是在上面改人家的呢，还是怎样呢？改人家的，你必须将代码都大致扫一下，哪里有坑没坑起码有个底。于是，你扫了几眼，omg，你决定了，不改人家的，直接干掉人家的代码。</p>
<p> </p>
<p>为啥呢？因为你看到一大堆重复的垃圾，一大堆命名乱七八糟完全不格式化的垃圾。你还有心情改么？没了，于是删除，但是，有依赖了。tmd，这个功能模块被另外一个功能模块引用了，那个脑残搞的，完全是两个不搭边的功能，怎么搞依赖额啊。而且，那个引用的模块已经有其他人改了，你告诉他改掉引用的，人家不理你。哎，看着项目经理天天问你进展怎么样啊，好了，你只好妥协。你不删掉了，你只有自己新增，然后心里想，不知道哪个sb会来维护，看着这一堆界面，不把环境跑起来都看不到实际用的是哪套界面了。。。</p>
<p> </p>
<p>恩，你本以为自己新增的就可以了，起码能让自己改的东西像点人样。</p>
<p> </p>
<p>但是你又错了。</p>
<p> </p>
<p>首先写页面，整个项目的所有页面都是相同的布局：</p>
<p>
</p>
<pre name="code" class="html">&lt;!--判断是否有登陆如果没登录那么展示下面的内容--&gt;
&lt;div&gt;
离线信息
&lt;/div&gt;
&lt;!--如果已经登录了 并且界面初始化有报错那么展示下面内容--&gt;
&lt;div&gt;
报错信息
&lt;/div&gt;
&lt;!--如果已经登录并且界面初始化没报错那么展示下面内容--&gt;
&lt;div&gt;
页面内容
&lt;/div&gt;</pre>

<p> 你看着看着就抓狂了，tmd哪个sb搞的，那天我离线信息换个展示内容我不是所有页面改一下。但是，要改成正确的方式，却是需要改动整个框架，项目经理说，算啦，就那样啦快点搞掂完事。恩，你也没能怎样，最后，你要么妥协也这样写，要么，你自己在你的模块内加个公用的东西来处理，然后等着后面哪天有人维护在那里骂，靠，干嘛就要跟人家不一样，还要我郁闷了一翻才找到。</p>
<p> </p>
<p>你以为重复的代码就这些么？错了，重复的代码已经浸透了整个项目，这里是，那里是，已经是everywhere了。</p>
<p> </p>
<p>所有的页面，本来是用一套界面的嘛，所以应该将那些和业务无关的页面逻辑抽离出来的嘛，然后业务界面只需要引用那些抽离的就可以了，但是呢，所有界面都没有这样做，都是一大堆html里面隐藏着一部分的业务界面，你抓狂了。那天你看到两个业务界面的风格不同，经理叫你搞掂它，你真是想死的心都有了。</p>
<p> </p>
<p>界面都这么多重复，你以为java类里重复会少么？对的，只有更多，没有最多。</p>
<p> </p>
<p>tmd所有页面类的初始化页面最开始都必须调用一个sb方法啊有木有，就是为了判断有没权限啊登录了没有啊之类的啊？不搞aop也可以完成这样的呀，连filter都不会用么？这么简单的道理，业务类就是负责业务相关的啊，登录权限是其他做的呀，靠，这是十年前的代码么？答案是，两三年前而已。。。</p>
<p> </p>
<p>tmd所有的页面类的调用接口的代码都要一大堆trycatch，一大堆封装参数啊有没有，一大堆判断出参结果是否对啊有没有，tmd出参的判断一个公共方法就可以搞掂啊，扔到哪个类文件里都有，tmd一个trycatch就可以了呀，其实还可以不用，靠整那么多嵌套trycatch发疯啊，就那么简单的代码还浪费人脑细胞这是为啥？</p>
<p> </p>
<p>tmd所有调用接口类里的方法代码都是一模一样的呀，就是方法名不同啊，整整2w多行啊。它是怎么来到这个世界上的啊？</p>
<p> </p>
<p>tmd所有页面类里业务方法还要负责插日志啊，你以为插日志就是简单的一行代码log下而已啊，它是几十行的代码啊，还几个trycatch嵌套啊，一大堆参数封装啊，你已经抓狂n次方了。</p>
<p> </p>
<p>tmd什么乱七八糟的命名也不会引起你多少的反感了，因为你知道你天天就在这些fucking code下面不停的改一大堆重复的垃圾。你知道，你一看到它们就很烦躁，但不得不静下心去改，只求快点解脱。</p>
<p> </p>
<p>但是，噩梦接踪而来，日志记录要更改啊，调用接口的方式要变更啊，封装参数换成另外的方式啊。。。</p>
<p> </p>
<p>in the end.u're murdered by the fucking code</p>
<p><a href='_index.htm'>&lt;&lt;目录</a></p>
</body>
</html>